stages:
  - build
  - test
  - publish

#variables:
#  REPOSITORY_NAME: spring-boot-coroutines-exposed
#  # Instruct Docker host to daemon of DinD.
#  DOCKER_HOST: "tcp://docker:2375"
#  DOCKER_TLS_CERTDIR: ""


before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle

image: openjdk:11-jdk-slim

cache:
  paths:
    - .gradle/wrapper
    - .gradle/caches

gradle-build:
  stage: build
  script: ./gradlew build
  artifacts:
    paths:
      - build/libs/*.jar


gradle-test:
  stage: test
  needs:
    - job: gradle-build
      artifacts: false
  script: ./gradlew test
  artifacts:
    when: always
    reports:
      junit: build/test-results/test/**/TEST-*.xml

docker-build:
  stage: publish
  image: docker:stable
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest

